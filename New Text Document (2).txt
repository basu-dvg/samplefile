created cluster using - eksctl create cluster --name=thirdekscluster --ssh-access=true --ssh-public-key=sreeeks --nodegroup-name=standard-workers --node-type=t3.medium --nodes=3 --nodes-min=1 --nodes-max=4 --node-ami=auto
https://github.com/hareeshab/kubernates.git

eksctl create cluster --name my-eks-cluster --nodegroup-name my-worker-node --node-type t2.medium --nodes 2 --managed --region us-east-1


eksctl delete cluster --name my-eks-cluster --region us-east-1

eksctl create cluster --name mebasu --nodegroup-name menodes --node-type t2.medium --nodes 2 --managed --region us-east-2

eksctl delete cluster --name mebasu --region us-east-2s

eksctl scale nodegroup --name myworker --cluster myname1 --nodes 2 --nodes-min 3 --nodes-max 6 --region us-east-2

eksctl version

eksctl upgrade cluster --name my-cluster --version 1.29 --approve

kubectl version --client

eksctl create cluster --name my-cluster --region region-code --version 1.28 --vpc-private-subnets subnet-ExampleID1,subnet-ExampleID2 --without-nodegroup

eksctl create cluster --name my-cluster --region region-code --version 1.28 --vpc-private-subnets subnet-ExampleID1,subnet-ExampleID2 --without-nodegroup
https://bytegoblin.io/blog/amazon-eks-upgrade-journey-from-1-25-to-1-26-electrifying

stage('sonar scan'){
 steps{
 withSonarQubeEnv('testSonar') {
 sh "mvn clean install sonar:sonar -Dsonar.projectKey=testnew -Dsonar.url=http://54.88.244.241:9000"
 }
 }
 }